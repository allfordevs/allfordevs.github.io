<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://brunobarbosademelo.github.io/</id><title>Bruno Melo</title><subtitle>Um blog dedicado para compartilhar dicas e experiencias sobre tecnologia.</subtitle> <updated>2021-10-06T15:50:10-03:00</updated> <author> <name>Bruno Barbosa de Melo</name> <uri>https://brunobarbosademelo.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://brunobarbosademelo.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="pt-BR" href="https://brunobarbosademelo.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Bruno Barbosa de Melo </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Como executar tarefas agendadas em background usando a interface IHostedServices</title><link href="https://brunobarbosademelo.github.io/posts/como-executar-tarefas-agendadas-em-background-usando-a-interface-ihostedservices/" rel="alternate" type="text/html" title="Como executar tarefas agendadas em background usando a interface IHostedServices" /><published>2021-09-28T09:00:00-03:00</published> <updated>2021-10-06T15:46:32-03:00</updated> <id>https://brunobarbosademelo.github.io/posts/como-executar-tarefas-agendadas-em-background-usando-a-interface-ihostedservices/</id> <content src="https://brunobarbosademelo.github.io/posts/como-executar-tarefas-agendadas-em-background-usando-a-interface-ihostedservices/" /> <author> <name>Bruno Barbosa de Melo</name> </author> <category term=".NET" /> <category term="Dicas" /> <summary> Você já precisou criar algum sistema que processasse em segundo plano? Se a resposta for sim, acredito que você tenha feito uso de frameworks como Hangfire, Quartz.NET ou implementou algo mais rústico à mão para criar windows services e controlar sua execução através do agendador de tarefas do próprio windows não é mesmo? Eu particularmente fiz muito isso (e continuo fazendo hehe) entretanto, a... </summary> </entry> <entry><title>Discriminated Unions - um estilo diferente para retornar valores de funções em C# usando a biblioteca OneOf.</title><link href="https://brunobarbosademelo.github.io/posts/Discriminated-Unions/" rel="alternate" type="text/html" title="Discriminated Unions - um estilo diferente para retornar valores de funções em C# usando a biblioteca OneOf." /><published>2021-03-18T17:00:00-03:00</published> <updated>2021-03-20T18:39:27-03:00</updated> <id>https://brunobarbosademelo.github.io/posts/Discriminated-Unions/</id> <content src="https://brunobarbosademelo.github.io/posts/Discriminated-Unions/" /> <author> <name>Bruno Barbosa de Melo</name> </author> <category term=".NET" /> <category term="bibliotecas" /> <summary> Aprenda um caminho diferente para retornar valores em C# usando a biblioteca OneOf. Suponho que em algum momento você desejou obter de um método valores diferentes como retorno, inclusive aposto que você fez uso de Tuplas como uma solução alternativa para alcançar um retorno satisfatório, não é mesmo? No paradigma funcional esse contexto costuma ser resolvido usando o que chamamos de Discrimi... </summary> </entry> </feed>
